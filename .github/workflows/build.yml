name: Build

on: [push]

jobs:
  build-mac:

    runs-on: macos-latest
#    strategy:
#      matrix:
#        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
    env:
      PYTHON: '/Library/Frameworks/Python.framework/Versions/3.7/bin/python3.7'

    steps:
    - uses: actions/checkout@v2
    - name: Install Python 3.7 macOS pkg
      run: |
        /usr/bin/curl https://www.python.org/ftp/python/3.7.6/python-3.7.6-macosx10.9.pkg -o /tmp/python-3.7.6-macosx10.9.pkg
        sudo /usr/sbin/installer -pkg /tmp/python-3.7.6-macosx10.9.pkg -target /
        /Applications/Python\ 3.7/Install\ Certificates.command
    - name: Install dependencies
      run: |
        ${PYTHON} -m pip install --upgrade pip
        ${PYTHON} -m pip install -r requirements.txt
    - name: Run build script
      run: |
        export PROJECT_PATH=$GITHUB_WORKSPACE
        /usr/bin/make build-macos
    - name: Package macOS App
      run: |
        cd ./dist
        /usr/bin/zip --symlinks -r HDFM.zip HDFM.app
    - name: Upload macOS App
      uses: actions/upload-artifact@v1
      with:
        name: HDFM.zip
        path: ./dist/HDFM.zip
  build-windows:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Run build script
        env:
          PYTHON: python
        shell: cmd
        run: |
          build_scripts\build_windows.bat
      - name: Upload Windows Executable
        uses: actions/upload-artifact@v1
        with:
          name: HDFM.exe
          path: ./dist/HDFM.exe

  build-ubuntu:

    runs-on: ubuntu-18.04

    strategy:
      matrix:
        arch: [amd64, arm64, armhf]
        include:
          - arch: amd64
            image: ubuntu:18.04
          - arch: arm64
            image: multiarch/ubuntu-core:arm64-bionic
          - arch: armhf
            image: multiarch/ubuntu-core:armhf-bionic

    env:
      BUILD_ARCH: ${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v2
      - name: Enable Multi-arch Docker
        if: matrix.arch == 'arm64' || matrix.arch == 'armhf'
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - name: Set up/Build Executable
        uses: docker://${{ matrix.image }}
        with:
          args: |
            bash -c "\
            export DEBIAN_FRONTEND=noninteractive \
            && apt-get update \
            && apt-get install -y python3.7 python3.7-dev python3.7-venv virtualenv python3-tk tk8.6-dev tcl8.6-dev libjpeg-dev zlib1g-dev \
            && ./build_scripts/build_ubuntu.sh"
      - name: Create Debian Package
        run: |
          sudo -E ./build_scripts/build_deb.sh ./build_resources/deb_template ./dist/hdfm ./dist
      - name: Upload ${{ matrix.arch }} Debian Package
        uses: actions/upload-artifact@v1
        with:
          name: HDFM ${{ matrix.arch }} deb
          path: ./dist/hdfm.deb
